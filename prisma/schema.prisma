generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "foreignKeys"
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  name     String?
  lname    String?
  role     userRole @default(USER)
  orders   Order[]
}

model Nomenclature {
  id        Int     @id
  name      String? @db.VarChar(156)
  mrp       Float?
  price     Float?
  vendor    String? @db.VarChar(156)
  mancode   Int?
  manname   String? @db.VarChar(156)
  unit      String? @db.VarChar(20)
  amount    Int?
  classcode String? @db.VarChar(24)
  classname String? @db.VarChar(156)
  fullname  String? @db.VarChar(256)
}

model Order {
  id           Int         @id @default(autoincrement())
  name         String
  contractorId Int
  teamIds      Int[]
  paydate      DateTime?   @db.Date
  shipdate     DateTime?   @db.Date
  margin       Int?
  nomenclature Int[]
  comment      String?
  createdAt    DateTime?   @db.Date
  projectId_   Int?        @map("projectId ")
  cost         Decimal?    @db.Money
  completed    Boolean     @default(false)
  userId       Int?        @default(0)
  contractor   contractor? @relation(fields: [contractorId], references: [id])
  User         User?       @relation(fields: [userId], references: [id])
  files        Bytes[]
}

model contractor {
  id      Int     @id @default(autoincrement())
  name    String  @unique
  comment String? @db.VarChar(256)
  Order   Order[]
}

model project {
  id      Int     @id @default(autoincrement())
  name    String  @unique
  comment String?
}

model performer {
  id    Int      @id @default(autoincrement())
  name  String
  lname String
  role  perfRole
}

enum perfRole {
  FITTER
  ENGINEER
}

enum userRole {
  ADMIN
  USER
  DEV
}
